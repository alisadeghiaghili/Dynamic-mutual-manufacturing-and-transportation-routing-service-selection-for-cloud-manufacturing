function [CostVector] = ShowChromosomeCostDetails(Chromosomes, NumOfTasks, ...
                  NumOfOperations, Times, Costs, Productivity, Distances, LogisticCost, CityNames)
              
CostVector = 0;

for task = 1:NumOfTasks
    disp(['---- Task ' num2str(task)]);
    
    CurrentTask = Chromosomes(1, ((task - 1) * NumOfOperations + 1) : (task * NumOfOperations));
    
    if (sum(CurrentTask) == 0)
        disp('-------- Nothing to do');
    end
    
    TaskOperations = find(CurrentTask > 0);
    TaskCities = CurrentTask(1,TaskOperations);
    
    % Operation Costs
    OC = 0;
    for operation = 1:size(TaskOperations,2)
        NewCost = Times(TaskOperations(1, operation), TaskCities(1, operation)) ...
                * Costs(TaskOperations(1, operation), TaskCities(1, operation)) ...
                / Productivity(1, TaskCities(1, operation));
        disp(['-------- Operation ' num2str(TaskOperations(1, operation)) ...
              ' in City ' CityNames{TaskCities(1,operation)} ...
              ' -> (T)' num2str(Times(TaskOperations(1, operation),TaskCities(1, operation))) ... 
              ' * (C)' num2str(Costs(TaskOperations(1, operation), TaskCities(1, operation))) ... 
              ' / (P)' num2str(Productivity(1, TaskCities(1, operation))) ... 
              ' = ' num2str(NewCost) ... 
            ]);
        
        OC = OC + NewCost;

        if(isinf(NewCost))
            disp(strcat('Operation City Missmatch',...
                        ' , Task: ',num2str(t),...
                        ' , Operation: ',num2str(TaskOperations(1, operation)),...
                        ' , City: ',num2str(TaskCities(1, operation))...
                       )...
                );
        end
    end

    % Logistic Costs
    LC = 0;
    if(size(TaskOperations, 2) >= 2)
        for operation = 1:size(TaskOperations,2)-1
            NewCost = LogisticCost * Distances(TaskCities(1, operation), TaskCities(1, operation + 1));
            disp(['-------- From ' CityNames{TaskCities(1, operation)} ...
                  ' to ' CityNames{TaskCities(1, operation + 1)} ...
                  ' -> (L)' num2str(LogisticCost) ... 
                  ' * (D)' num2str(Distances(TaskCities(1, operation), TaskCities(1, operation + 1))) ... 
                  ' = ' num2str(NewCost) ... 
                ]);
            
            LC = LC + NewCost;
            if(isinf(NewCost))
                disp(strcat('Operation City Massmatch',...
                            ' , Task: ',num2str(t),...
                            ' , Operation: ',num2str(TaskOperations(1, operation)),...
                            ' , City: ',num2str(TaskCities(1, operation))...
                           )...
                    );
            end
        end
    end
    CostVector = CostVector + OC + LC;
    disp(['---- Current run Total = ' num2str(CostVector)]);
end